[build-system]
requires = ["setuptools>=61.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[project]
name = "core"
dynamic = ["version"]
#authors = [
#    { name = "", email = "" },
#    { name = "", email = "" },
#    { name = "", email = "" },
#]

#maintainers = [{ name = "" }]
license = { text = "BSD 3-Clause" }
description = "State-of-the-Art simplification of street network geometry with Python"
keywords = [""]
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: GIS",
]
requires-python = ">=3.11,<3.12"
dependencies = [
    "bokeh",
    "clustergram",
    "contextily",
    "dask",
    "dask-geopandas",
    "esda>=2.5.1",
    "geopandas>=0.13.0",
    "graphblas-algorithms",
    #"h3-py", # -- via conda
    "h3==3.7.7", # -- via PyPI
    "ipykernel",
    "jupyterlab",
    "matplotlib>=3.9",
    "momepy>=0.8.1",
    "osmnx>=1.9.1",
    "pointpats>=2.3.0",
    "pip",
    "pyarrow",
    "pyogrio",
    "scikit-learn>=1.2",
    "tobler>=0.11.3",
    "tqdm>=4.63.0",
    "watermark",
    "opencv-python", # -- via PyPI
    # -- via conda -- see https://github.com/conda-forge/opencv-feedstock
    # | "libopencv",
    # | "opencv",
    # | "py-opencv",
    # formatting & linting
    "pre-commit",
    "ruff",
    # tqdm warning - TqdmWarning: IProgress not found
    "jupyter",
    "ipywidgets",
    # not available via conda-forge
    "cityseer",
    "parenx",
    # bleeding edge functionality
    "neatnet @ git+https://github.com/uscuni/neatnet.git",
]


[project.urls]
Home = "https://github.com/uscuni/"
Repository = "https://github.com/uscuni/simplification"

[project.optional-dependencies]
tests = [
    "codecov",
    "coverage",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
]


[tool.setuptools.packages.find]
include = ["core", "core.*"]

[tool.ruff]
line-length = 88
extend-include = ["*.ipynb"]
lint.select = ["E", "F", "W", "I", "UP", "N", "B", "A", "C4", "SIM", "ARG"]

[tool.ruff.lint.per-file-ignores]
 "*__init__.py" = [
     "F401",  # imported but unused
     "F403",  # star import; unable to detect undefined names
 ]
 "*.ipynb" = [
    "C408",  # Unnecessary `dict` call
    "E501",  # Line too long
    "F401",  # imported but unused
]

[tool.coverage.run]
source = ["./core"]

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "except ModuleNotFoundError:",
    "except ImportError",
]
ignore_errors = true
omit = ["core/tests/*"]
